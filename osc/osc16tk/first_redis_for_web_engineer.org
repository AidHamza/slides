#+REVEAL_ROOT: ../../reveal.js
#+REVEAL_MATHJAX_URL: https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML
#+OPTIONS: reveal_slide_number:nil reveal_control:nil reveal_progress:nil toc:0 reveal_mathjax:t num:nil LaTeX:t timestamp:nil
#+REVEAL_THEME: black
#+REVEAL_EXTRA_CSS: ../../extra.css
#+TITLE: Webエンジニアのためのはじめてのredis
#+AUTHOR: @nasa9084

* I'm...
  #+REVEAL_HTML: <div style="float: left;">
  file:img/pika.jpg
  #+REVEAL_HTML: </div>

  - 北村壮大 (Masahiro Kitamura)
  - @nasa9084
  - 北海道大学工学部
  - 情報エレクトロニクス学科
  - コンピュータサイエンスコース
  - 情報認識学研究室

#+REVEAL: split
  file:img/digiporo_logo.png

   初心者向けIT技術勉強会
   - HTTPのキホン
   - 正規表現入門
   - Webサーバーを構築してみよう
   - はじめてのSQL
   - などなど...

* redis
:PROPERTIES:
:reveal_background: img/redis_bg.png
:END:

** redisとは?
   #+REVEAL_HTML: <div style="float: left;">
   file:img/redis.png
   #+REVEAL_HTML: </div>

   - remote dictionary server
   - Key-Value Store (KVS)
   - in-memory

#+BEGIN_NOTES
- BSD license
- 実装はC
- 最新のStableは3.2.5
#+END_NOTES

** Key-value Store (KVS)
   - dict(Python)
   - hash(Perl, Ruby)
   - map(C++, Java, Go)
   - 名前空間

file:img/comp_rdb_kvs.png

** RDBMSとの比較

| 機能             | RDBMS | Redis |
|------------------+-------+-------|
| シンプルな用途   | △    | ◎    |
| 高速処理         | △    | ◎    |
| 水平分散         | ×    | ◎    |
| 高可用設計       | △    | ◎    |
| 複雑なクエリ     | ◎    | ×    |
| トランザクション | ◎    | △    |
| 一貫性           | ◎    | △    |

#+BEGIN_NOTES
- SQLでもできなくはないがより簡単
- in-memoryで構造がシンプルなため
- クラスタリングをネイティブサポートしている
- マスタ・スレーブ構成をサポート
- 複雑な絞り込みなどはできない
- なくはないがロールバックしない
- トランザクションがないので
#+END_NOTES

* Redisのデータ型
** String
   #+REVEAL_HTML: <div style="float: left;">
   file:img/string.png
   #+REVEAL_HTML: </div>

   - 文字列
     + 文字列の一部置き換え
     + 長さの取得
   - 数値
     + ~INCR~ / ~DECR~ できる
   - 最大512MB
   - バイナリセーフ

#+BEGIN_NOTES
最も基本的な型
#+END_NOTES

** List
   file:img/list.png

   - Stringのリスト
   - Linked List
   - 最大2^{32}-1要素

#+BEGIN_NOTES
先頭・末尾要素へのアクセスが高速
#+END_NOTES

** Set
   file:img/set.png

   - Stringの集合
     + 順序なし
     + 重複なし
   - 最大2^{32}-1要素


** Sorted Set (ZSet)
   file:img/zset.png

   - Stringの集合
     + 重複なし
   - 各メンバがScoreで順序付けされる

#+BEGIN_NOTES
Redisの中でも特徴的な型
- 中間要素へのアクセスが高速
#+END_NOTES

** Hash
   file:img/hash.png

   - StringからStringへのmap
     + Java: ~HashMap<String, String>~
   - 最大2^{32}-1ペア

#+BEGIN_NOTES
少ないフィールドのHashはメモリ効率が良い
#+END_NOTES

* redisの使いどころ
