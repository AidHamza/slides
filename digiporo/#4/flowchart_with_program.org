#+REVEAL_ROOT: ../../reveal.js
#+REVEAL_MATHJAX_URL: https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML
#+OPTIONS: reveal_mathjax:t
#+OPTIONS: toc:0
#+OPTIONS: num:nil
#+REVEAL_THEME: simple-noborder
#+TITLE: flowchart w/program structures
#+AUTHOR: nasa9084
#+EMAIL:

* 自己紹介
#+REVEAL_HTML: <div style="float:left;">
[[../pika.jpg]]
#+REVEAL_HTML: </div>
- 名前
  + 北村壮大 : Masahiro Kitamura
  + HN : nasa9084
- 所属
  + 北海道大学
  + 工学部
  + 情報エレクトロニクス学科
  + コンピュータサイエンスコース
  + 情報認識学研究室

* QUESTION:
Have you ever seen a flowchart?
** フローチャートとは
プログラムや作業の流れを図に表したもの

** 今？
正直、「過去の遺産」に近い

** ではなぜ？
#+ATTR_REVEAL: :frag (appear)
- やはり流れを考えるのに便利
- 今でも使われている→読めないと困る

** なので
さらっとやりましょう

** JIS規格
一応、JISで規格が定められている
#+ATTR_REVEAL: :frag (appear)
→今回はJIS規格に沿った形で紹介

* 部品
フローチャートで使われる部品
** 端子
[[./img/terminator.png]]

始点・終点を表す

** 処理
[[./img/process.png]]

何らかの処理一つを表す

** 入力
[[./img/input.png]]

キーボードなどからの入力を表す

** 出力

主に2種類

*** 画面出力
[[./img/disp.png]]

画面への出力を表す

*** 印刷
[[./img/print.png]]

ドキュメントへの印刷を表す

** 分岐点
[[./img/decision.png]]

分岐点及び分岐条件を表す

*** ループ
[[./img/loop.png]]

分岐で書けるのでオプション的

前条件判定と後条件判定がある

** 定義済み処理
[[./img/subroutine.png]]

いわゆるサブルーチン・関数など

* 順次構造
** 代入
[[./img/sub.png]]

左の値を右の変数へ代入する

#+BEGIN_NOTES
一般的なプログラミング言語とは逆なので注意

プログラムに合わせて、左に変数を置くこともある
#+END_NOTES

** その他
[[./img/in_out.png]]

#+BEGIN_NOTES
変数を出力するのか、定数を出力するのかなど

I/Oを同じ記号で書くことも
#+END_NOTES

* 条件分岐
** if
#+REVEAL_HTML: <div style="float:left;">
[[./img/if.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div style="margin-top:4em;">
標準的な分岐構造

cond(条件式)が真か偽かで処理を変える
#+REVEAL_HTML:</div>

#+BEGIN_NOTES
必ず合流していることが大事
#+END_NOTES

** switch-case
#+REVEAL_HTML: <div style="float:left;">
[[./img/switch(1).png]]
#+REVEAL_HTML: </div>

[[./img/switch(2).png]]

* 反復
** while
#+REVEAL_HTML: <div style="float:left;">
[[./img/while(1).png]]
#+REVEAL_HTML: </div>
[[./img/while(2).png]]

** for
[[./img/for.png]]
* サブルーチン
** 書き方
[[./img/subroutine_eg.png]]
* THANK YOU!
